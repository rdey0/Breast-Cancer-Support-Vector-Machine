{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Roy/Documents/projects/breast_cancer_svm/express-react/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport graph_img from './graph_img/graph.png';\nimport Select from './components/select_box.js';\nimport Slider from './components/slider.js';\nimport Header from './components/header.js';\nimport Plot from './components/graph_plot.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      plot_src: graph_img,\n      x_var: 'mean concavity',\n      y_var: 'worst concavity',\n      degree: '1',\n      cost: '1',\n      model_accuracy: 0,\n      graph_loading: false,\n      show_modal: true\n    };\n\n    this.handle_field_change = (id, value) => {\n      this.setState({\n        [id]: value\n      }, () => {\n        console.log('app state:', this.state);\n      });\n    };\n\n    this.update_accuracy = () => {\n      var request_params = {\n        headers: {\n          'Content-Type': \"application/json;charset=utf-8\"\n        },\n        method: 'GET'\n      };\n      fetch('/accuracy', request_params).then(res => res.json()).then(res => {\n        var num_figures = 4;\n        var accuracy = (parseFloat(res.accuracy) * 100).toPrecision(num_figures);\n        this.setState({\n          model_accuracy: accuracy\n        });\n      });\n    };\n\n    this.refresh_graph = () => {\n      var request_params = {\n        headers: {\n          'Content-Type': \"application/json;charset=utf-8\"\n        },\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        redirect: 'follow'\n      };\n      this.setState({\n        graph_loading: true\n      });\n      fetch('/graph', request_params).then(res => {\n        return res.blob();\n      }).then(res => {\n        this.setState({\n          plot_src: URL.createObjectURL(res)\n        });\n        this.update_accuracy();\n        this.setState({\n          graph_loading: false\n        });\n      }).catch(error => console.log('Error:', error));\n    };\n\n    this.optimize_graph = () => {\n      var request_params = {\n        headers: {\n          'Content-Type': \"application/json;charset=utf-8\"\n        },\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        redirect: 'follow'\n      };\n      this.setState({\n        graph_loading: true\n      });\n      fetch('/optimize_graph', request_params).then(res => {\n        return res.json();\n      }).then(res => {\n        this.setState({\n          degree: res.best_degree,\n          cost: res.best_cost\n        }, () => {\n          this.refresh_graph();\n          console.log(this.state);\n        });\n      }).catch(error => console.log('Error:', error));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      src: this.state.plot_src,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gui-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"svm-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      src: this.state.plot_src,\n      isLoading: this.state.graph_loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"graph-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \" Model Accuracy\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, this.state.model_accuracy, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \" Degree\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, this.state.degree)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \" Cost\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, this.state.cost)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      label: \"X Variable\",\n      id: \"x_var\",\n      variable_name: \"mean concavity\",\n      onChange: this.handle_field_change,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      label: \"Y Variable\",\n      id: \"y_var\",\n      variable_name: \"worst concavity\",\n      onChange: this.handle_field_change,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      label: \"Degree\",\n      id: \"degree\",\n      min: \"1\",\n      max: \"5\",\n      onChange: this.handle_field_change,\n      value: this.state.degree,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      label: \"Cost\",\n      id: \"cost\",\n      min: \"1\",\n      max: \"10\",\n      onChange: this.handle_field_change,\n      value: this.state.cost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"update-graph\",\n      onClick: this.refresh_graph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"Graph\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"update-graph\",\n      onClick: this.optimize_graph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Optimize\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/Roy/Documents/projects/breast_cancer_svm/express-react/client/src/App.js"],"names":["React","graph_img","Select","Slider","Header","Plot","App","Component","state","plot_src","x_var","y_var","degree","cost","model_accuracy","graph_loading","show_modal","handle_field_change","id","value","setState","console","log","update_accuracy","request_params","headers","method","fetch","then","res","json","num_figures","accuracy","parseFloat","toPrecision","refresh_graph","body","JSON","stringify","redirect","blob","URL","createObjectURL","catch","error","optimize_graph","best_degree","best_cost","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport graph_img from './graph_img/graph.png'\nimport Select from './components/select_box.js'\nimport Slider from './components/slider.js'\nimport Header from './components/header.js'\nimport Plot from './components/graph_plot.js'\nclass App extends React.Component {\n  state = {\n    plot_src: graph_img, \n    x_var: 'mean concavity', \n    y_var: 'worst concavity', \n    degree: '1', \n    cost: '1',\n    model_accuracy: 0,\n    graph_loading: false,\n    show_modal: true\n  }\n\n  handle_field_change=(id, value)=>{\n    this.setState({[id]: value}, ()=>{\n      console.log('app state:',this.state);\n    });\n  }\n\n  update_accuracy=()=>{\n    var request_params = {\n      headers: {\n        'Content-Type': \"application/json;charset=utf-8\"\n      },\n      method: 'GET'\n    }\n    fetch('/accuracy', request_params)\n      .then(res => res.json())\n      .then(res => {\n        var num_figures = 4;\n        var accuracy = (parseFloat(res.accuracy) * 100).toPrecision(num_figures);\n        this.setState({model_accuracy: accuracy});\n      })\n  }\n\n  refresh_graph=()=>{\n    var request_params = {\n      headers: {\n        'Content-Type': \"application/json;charset=utf-8\"\n      },\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      redirect: 'follow'\n    };\n    this.setState({graph_loading: true});\n    fetch('/graph', request_params)\n      .then(res => {\n        return res.blob();\n      })\n      .then(res =>{\n        this.setState({plot_src: URL.createObjectURL(res)});\n        this.update_accuracy();\n        this.setState({graph_loading: false}); \n      })\n      .catch(error => console.log('Error:', error));\n  }\n\n  optimize_graph=()=>{\n    var request_params = {\n      headers: {\n        'Content-Type': \"application/json;charset=utf-8\"\n      },\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      redirect: 'follow'\n    };\n    this.setState({graph_loading: true});\n    fetch('/optimize_graph', request_params)\n    .then(res => {\n      return res.json();\n    })\n    .then(res =>{\n      this.setState({degree: res.best_degree, cost: res.best_cost}, ()=>{\n        this.refresh_graph();\n        console.log(this.state);\n      });\n    })\n    .catch(error => console.log('Error:', error));\n  }\n\n\n\n  render(){\n    \n    return (\n      <div className=\"App\">\n        <Header src={this.state.plot_src}/>\n\n        <div className='gui-container'>\n          <div className='svm-display'>\n            <Plot src={this.state.plot_src} isLoading={this.state.graph_loading}/>\n            <div className='graph-info-container'>\n              <div className='info-item'>\n                <div className='control-label'> Model Accuracy</div>\n                <div className='metric'>{this.state.model_accuracy}%</div>\n              </div>\n              <div className='info-item'>\n                <div className='control-label'> Degree</div>\n                <div className='metric'>{this.state.degree}</div>\n              </div>\n              <div className='info-item'>\n                <div className='control-label'> Cost</div>\n                <div className='metric'>{this.state.cost}</div>\n              </div>\n            </div>\n          </div>\n          <div className='controls'>\n            <Select label='X Variable' id='x_var' variable_name='mean concavity' onChange={this.handle_field_change}/>\n            <Select label='Y Variable' id='y_var' variable_name='worst concavity' onChange={this.handle_field_change}/>\n            <Slider label='Degree' id='degree' min='1' max='5' onChange={this.handle_field_change} value={this.state.degree}/>\n            <Slider label='Cost' id='cost' min='1' max='10' onChange={this.handle_field_change} value={this.state.cost}/>\n            <div className='button-container'>\n              <div className='update-graph' onClick={this.refresh_graph}>Graph</div>\n              <div className='update-graph' onClick={this.optimize_graph}>Optimize</div>\n            </div>\n          </div>\n        </div>\n      \n      </div>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}